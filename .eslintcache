[{"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Welcome.jsx":"1","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\index.js":"2","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\App.jsx":"3","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\root-reducer.js":"4","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Companies.jsx":"5","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Header.jsx":"6","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Footer.jsx":"7","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Jobs.jsx":"8","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\jobs\\jobs.reducer.js":"9","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\companies\\companies.reducer.js":"10","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\helpers\\helpers.reducer.js":"11","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\total\\total.reducer.js":"12","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\total\\total.actions.js":"13","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\companies\\companies.actions.js":"14","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\helpers\\checkScroll.js":"15","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\jobs\\jobs.actions.js":"16","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Menu.jsx":"17","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\jobs\\jobs.types.js":"18","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\total\\total.types.js":"19","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\axios\\baseUrl.js":"20","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Error404.jsx":"21","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\helpers\\helpers.actions.js":"22","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\reportWebVitals.js":"23","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Company.jsx":"24","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\companies\\companies.types.js":"25","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Job.jsx":"26","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\helpers\\helpers.types.js":"27","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\store.js":"28"},{"size":773,"mtime":1612801223031,"results":"29","hashOfConfig":"30"},{"size":750,"mtime":1610473835034,"results":"31","hashOfConfig":"30"},{"size":941,"mtime":1612273870713,"results":"32","hashOfConfig":"30"},{"size":332,"mtime":1611262289168,"results":"33","hashOfConfig":"30"},{"size":1740,"mtime":1613811287860,"results":"34","hashOfConfig":"30"},{"size":2604,"mtime":1612524815308,"results":"35","hashOfConfig":"30"},{"size":2039,"mtime":1613811125832,"results":"36","hashOfConfig":"30"},{"size":4452,"mtime":1612691860555,"results":"37","hashOfConfig":"30"},{"size":426,"mtime":1611261761298,"results":"38","hashOfConfig":"30"},{"size":334,"mtime":1611261745620,"results":"39","hashOfConfig":"30"},{"size":371,"mtime":1611256247897,"results":"40","hashOfConfig":"30"},{"size":273,"mtime":1611262587852,"results":"41","hashOfConfig":"30"},{"size":465,"mtime":1611262840313,"results":"42","hashOfConfig":"30"},{"size":788,"mtime":1612697659553,"results":"43","hashOfConfig":"30"},{"size":3049,"mtime":1612696724525,"results":"44","hashOfConfig":"30"},{"size":1068,"mtime":1610732016202,"results":"45","hashOfConfig":"30"},{"size":793,"mtime":1612267296478,"results":"46","hashOfConfig":"30"},{"size":97,"mtime":1610730544937,"results":"47","hashOfConfig":"30"},{"size":51,"mtime":1611261939270,"results":"48","hashOfConfig":"30"},{"size":308,"mtime":1612616249970,"results":"49","hashOfConfig":"30"},{"size":356,"mtime":1612970568454,"results":"50","hashOfConfig":"30"},{"size":190,"mtime":1611256259971,"results":"51","hashOfConfig":"30"},{"size":375,"mtime":1610362793213,"results":"52","hashOfConfig":"30"},{"size":619,"mtime":1613811575266,"results":"53","hashOfConfig":"30"},{"size":110,"mtime":1610362793201,"results":"54","hashOfConfig":"30"},{"size":1167,"mtime":1612297846374,"results":"55","hashOfConfig":"30"},{"size":62,"mtime":1611256172687,"results":"56","hashOfConfig":"30"},{"size":238,"mtime":1610362793211,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"109wmfl",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Welcome.jsx",[],["123","124"],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\index.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\App.jsx",[],["125","126"],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\root-reducer.js",[],["127","128"],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Companies.jsx",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Header.jsx",["129"],"import React, { useEffect, useState } from 'react';\r\nimport './Header.scss';\r\n\r\nimport logo from '../assets/images/shaqo doon logo.png';\r\nimport info from '../assets/images/info.png';\r\nimport loading from '../assets/gif/loading 2.gif';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getTotal } from '../redux/total/total.actions';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { scrollPosition } from '../helpers/checkScroll';\r\n\r\nimport Menu from './Menu';\r\n\r\nconst Header = ({ getTotal, total }) => {\r\n    const [imgSize, setImgSize] = useState('150px');\r\n    const [fontSize1, setFontSize1] = useState('23px');\r\n    const [fontSize2, setFontSize2] = useState('21px');\r\n\r\n    const reset = () => {\r\n        setImgSize('150px');\r\n        setFontSize1('23px');\r\n        setFontSize2('21px');\r\n    };\r\n\r\n    const minimize = () => {\r\n        setImgSize('100px');\r\n        setFontSize1('18px');\r\n        setFontSize2('17px');\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTotal();\r\n        scrollPosition(150, minimize, reset);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"header-wrapper\">\r\n            <div className=\"header\" >\r\n                <div className=\"image\">\r\n                    {/* <Link to='https://info.shaqodoon.ro/' alt='info shaqo doon'>\r\n                        <img src={info} alt=\"info shaqo doon\" style={{ width: '30px', marginBottom: '60px' }} />\r\n                    </Link> */}\r\n                    <Link to='/' >\r\n                        <img src={logo} alt=\"shaqo doon logo\" style={{ width: imgSize, height: imgSize }} />\r\n                    </Link>\r\n                </div>\r\n\r\n                <p className='moto' style={{ fontSize: fontSize1 }}>Un singur loc pentru toate locurile de muncă</p>\r\n                <div className=\"total\" style={{ fontSize: fontSize2 }}>\r\n                    <div className=\"jobs\"><span className='white'>{total ? total.jobs : <img src={loading} alt='shaqo doon loading' />} </span> <span className='text'>locuri de muncă</span></div>\r\n                    <div className=\"t-companies\"><span className='white'>{total ? total.companies : <img src={loading} alt='shaqo doon loading' />} </span> <span className='text'>companii</span></div>\r\n                </div>\r\n            </div>\r\n            <Menu />\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = ({ total }) => ({\r\n    total,\r\n});\r\n\r\nconst mapDispatchToState = dispatch => ({\r\n    getTotal: () => dispatch(getTotal()),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(Header);\r\n","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Footer.jsx",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Jobs.jsx",["130"],"import React, { useEffect, useState } from 'react';\r\nimport './Jobs.scss';\r\n\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getAllJobs, getJobsCompany } from '../redux/jobs/jobs.actions';\r\nimport { getAllCompanies } from '../redux/companies/companies.actions';\r\nimport { setIsLoading } from '../redux/helpers/helpers.actions';\r\n\r\nimport loading from '../assets/gif/loading 2.gif';\r\n\r\nimport Job from '../components/Job';\r\n\r\nconst AllJobs = (\r\n    {\r\n        jobs, getAllJobs,\r\n        companies, getAllCompanies,\r\n        getJobsCompany, jobsCompany,\r\n        isLoading, setIsLoading\r\n    }\r\n) => {\r\n\r\n    // const [loading, setLoading] = useState(true); //  this was replaced with redux\r\n    const [isCompaniesLoaded, setCompaniesLoaded] = useState(false);\r\n\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        // why do I need companies loaded? asnwer: to check if the company exist if user goes direct to jobs/company-name\r\n        if (!companies) {\r\n            getAllCompanies(() => { setCompaniesLoaded(true) });\r\n        } else {\r\n            // if companies are already loaded set it to true\r\n            setCompaniesLoaded(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // check if the companies are loaded, if not, wait\r\n        if (isCompaniesLoaded) {\r\n            if (params.company) {\r\n                let companySelected;\r\n                // get the api from all jobs from this company\r\n                companies ?\r\n                    companySelected = companies.filter(\r\n                        // check if there is any company based on the company name from url\r\n                        company => company.company === params.company ||\r\n                            // check if there is any company based on the company name from url after replacing '-' with ' '\r\n                            company.company === params.company.replace(/-/g, ' ')\r\n                    ) : console.log('empty')\r\n                companySelected.length ?\r\n                    // if comapny exist show jobs\r\n                    getJobsCompany({ api: companySelected[0].link, cb: () => { setIsLoading(false) } })\r\n                    // if company do not exist redirect to companies page\r\n                    : history.push('/companii')\r\n            } else {\r\n                if (jobs) {\r\n                    setIsLoading(false)\r\n                } else {\r\n                    getAllJobs(() => { setIsLoading(false) });\r\n                }\r\n            }\r\n        }\r\n        // because I make it to render when 'isLoading' changes it render extra 1 time after setIsLoading(false)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isCompaniesLoaded, isLoading])\r\n\r\n    const renderJobs = (theJobs) => {\r\n        if (theJobs === null) {\r\n            setCompaniesLoaded(false);\r\n\r\n        }\r\n\r\n        return theJobs.map(({ company, title, city, country, link }) => {\r\n            return (<Job\r\n                key={`${link} ${Math.random()}`}\r\n                company={company}\r\n                title={title}\r\n                city={city}\r\n                country={country}\r\n                link={link}\r\n            />)\r\n        }\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        // console.log('loading')\r\n        return (\r\n            <div className=\"loading\">\r\n                <img src={loading} alt=\"shaqo doon loading\" />\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"jobs\">\r\n                <a href=\"#top\" id='top-jobs'></a>\r\n                {params.company ?\r\n                    renderJobs(jobsCompany)\r\n                    :\r\n                    renderJobs(jobs)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = ({ jobs, companies, helpers }) => ({\r\n    jobs: jobs.all,\r\n    jobsCompany: jobs.jobsCompany,\r\n    companies: companies.all,\r\n    isLoading: helpers.isLoading\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getAllJobs: (jobsLoaded) => dispatch(getAllJobs(jobsLoaded)),\r\n    getJobsCompany: (data) => dispatch(getJobsCompany(data)),\r\n    getAllCompanies: (cb) => dispatch(getAllCompanies(cb)),\r\n    setIsLoading: (bool) => dispatch(setIsLoading(bool)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllJobs);\r\n","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\jobs\\jobs.reducer.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\companies\\companies.reducer.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\helpers\\helpers.reducer.js",[],["131","132"],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\total\\total.reducer.js",[],["133","134"],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\total\\total.actions.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\companies\\companies.actions.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\helpers\\checkScroll.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\jobs\\jobs.actions.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Menu.jsx",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\jobs\\jobs.types.js",[],["135","136"],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\total\\total.types.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\axios\\baseUrl.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Error404.jsx",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\helpers\\helpers.actions.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\reportWebVitals.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Company.jsx",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\companies\\companies.types.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Job.jsx",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\helpers\\helpers.types.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\store.js",[],["137","138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"139","replacedBy":"143"},{"ruleId":"141","replacedBy":"144"},{"ruleId":"139","replacedBy":"145"},{"ruleId":"141","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":12},{"ruleId":"151","severity":1,"message":"152","line":99,"column":17,"nodeType":"153","endLine":99,"endColumn":46},{"ruleId":"139","replacedBy":"154"},{"ruleId":"141","replacedBy":"155"},{"ruleId":"139","replacedBy":"156"},{"ruleId":"141","replacedBy":"157"},{"ruleId":"139","replacedBy":"158"},{"ruleId":"141","replacedBy":"159"},{"ruleId":"139","replacedBy":"160"},{"ruleId":"141","replacedBy":"161"},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],["162"],["163"],["162"],["163"],"no-unused-vars","'info' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["162"],["163"],["162"],["163"],["162"],["163"],["162"],["163"],"no-global-assign","no-unsafe-negation"]