[{"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Welcome.jsx":"1","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\index.js":"2","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\App.jsx":"3","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\root-reducer.js":"4","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Companies.jsx":"5","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Header.jsx":"6","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Footer.jsx":"7","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Jobs.jsx":"8","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\jobs\\jobs.reducer.js":"9","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\companies\\companies.reducer.js":"10","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\helpers\\helpers.reducer.js":"11","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\total\\total.reducer.js":"12","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\total\\total.actions.js":"13","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\companies\\companies.actions.js":"14","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\helpers\\checkScroll.js":"15","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\jobs\\jobs.actions.js":"16","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Menu.jsx":"17","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\jobs\\jobs.types.js":"18","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\total\\total.types.js":"19","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\axios\\baseUrl.js":"20","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Error404.jsx":"21","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\helpers\\helpers.actions.js":"22","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\reportWebVitals.js":"23","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Company.jsx":"24","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\companies\\companies.types.js":"25","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Job.jsx":"26"},{"size":773,"mtime":1612801223031,"results":"27","hashOfConfig":"28"},{"size":750,"mtime":1610473835034,"results":"29","hashOfConfig":"28"},{"size":941,"mtime":1612273870713,"results":"30","hashOfConfig":"28"},{"size":332,"mtime":1611262289168,"results":"31","hashOfConfig":"28"},{"size":1693,"mtime":1612782427072,"results":"32","hashOfConfig":"28"},{"size":2604,"mtime":1612524815308,"results":"33","hashOfConfig":"28"},{"size":1618,"mtime":1612803571736,"results":"34","hashOfConfig":"28"},{"size":4452,"mtime":1612691860555,"results":"35","hashOfConfig":"28"},{"size":426,"mtime":1611261761298,"results":"36","hashOfConfig":"28"},{"size":334,"mtime":1611261745620,"results":"37","hashOfConfig":"28"},{"size":371,"mtime":1611256247897,"results":"38","hashOfConfig":"28"},{"size":273,"mtime":1611262587852,"results":"39","hashOfConfig":"28"},{"size":465,"mtime":1611262840313,"results":"40","hashOfConfig":"28"},{"size":788,"mtime":1612697659553,"results":"41","hashOfConfig":"28"},{"size":3049,"mtime":1612696724525,"results":"42","hashOfConfig":"28"},{"size":1068,"mtime":1610732016202,"results":"43","hashOfConfig":"28"},{"size":793,"mtime":1612267296478,"results":"44","hashOfConfig":"28"},{"size":97,"mtime":1610730544937,"results":"45","hashOfConfig":"28"},{"size":51,"mtime":1611261939270,"results":"46","hashOfConfig":"28"},{"size":308,"mtime":1612616249970,"results":"47","hashOfConfig":"28"},{"size":214,"mtime":1610362793182,"results":"48","hashOfConfig":"28"},{"size":190,"mtime":1611256259971,"results":"49","hashOfConfig":"28"},{"size":375,"mtime":1610362793213,"results":"50","hashOfConfig":"28"},{"size":563,"mtime":1612181274094,"results":"51","hashOfConfig":"28"},{"size":110,"mtime":1610362793201,"results":"52","hashOfConfig":"28"},{"size":1167,"mtime":1612297846374,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"109wmfl",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Welcome.jsx",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\index.js",[],["113","114"],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\App.jsx",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\root-reducer.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Companies.jsx",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Header.jsx",["115"],"import React, { useEffect, useState } from 'react';\r\nimport './Header.scss';\r\n\r\nimport logo from '../assets/images/shaqo doon logo.png';\r\nimport info from '../assets/images/info.png';\r\nimport loading from '../assets/gif/loading 2.gif';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getTotal } from '../redux/total/total.actions';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { scrollPosition } from '../helpers/checkScroll';\r\n\r\nimport Menu from './Menu';\r\n\r\nconst Header = ({ getTotal, total }) => {\r\n    const [imgSize, setImgSize] = useState('150px');\r\n    const [fontSize1, setFontSize1] = useState('23px');\r\n    const [fontSize2, setFontSize2] = useState('21px');\r\n\r\n    const reset = () => {\r\n        setImgSize('150px');\r\n        setFontSize1('23px');\r\n        setFontSize2('21px');\r\n    };\r\n\r\n    const minimize = () => {\r\n        setImgSize('100px');\r\n        setFontSize1('18px');\r\n        setFontSize2('17px');\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTotal();\r\n        scrollPosition(150, minimize, reset);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"header-wrapper\">\r\n            <div className=\"header\" >\r\n                <div className=\"image\">\r\n                    {/* <Link to='https://info.shaqodoon.ro/' alt='info shaqo doon'>\r\n                        <img src={info} alt=\"info shaqo doon\" style={{ width: '30px', marginBottom: '60px' }} />\r\n                    </Link> */}\r\n                    <Link to='/' >\r\n                        <img src={logo} alt=\"shaqo doon logo\" style={{ width: imgSize, height: imgSize }} />\r\n                    </Link>\r\n                </div>\r\n\r\n                <p className='moto' style={{ fontSize: fontSize1 }}>Un singur loc pentru toate locurile de muncÄƒ</p>\r\n                <div className=\"total\" style={{ fontSize: fontSize2 }}>\r\n                    <div className=\"jobs\"><span className='white'>{total ? total.jobs : <img src={loading} alt='shaqo doon loading' />} </span> <span className='text'>locuri de muncÄƒ</span></div>\r\n                    <div className=\"t-companies\"><span className='white'>{total ? total.companies : <img src={loading} alt='shaqo doon loading' />} </span> <span className='text'>companii</span></div>\r\n                </div>\r\n            </div>\r\n            <Menu />\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nconst mapStateToProps = ({ total }) => ({\r\n    total,\r\n});\r\n\r\nconst mapDispatchToState = dispatch => ({\r\n    getTotal: () => dispatch(getTotal()),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(Header);\r\n","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Footer.jsx",["116"],"import React, { useState, useEffect } from 'react';\r\nimport './Footer.scss';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { checkScrollingUpDown } from '../helpers/checkScroll';\r\n\r\nconst Footer = () => {\r\n    const [opacity, setOpacity] = useState(1);\r\n    const [translateY, setTranslateY] = useState(0);\r\n    const [achekerUrl, setAchekerUrl] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        checkScrollingUpDown(\r\n            null,\r\n            () => { setOpacity(1); setTranslateY(0) },\r\n            () => { setOpacity(0); setTranslateY(50) },\r\n        )\r\n\r\n        return () => {\r\n            checkScrollingUpDown();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setAchekerUrl(history.location.pathname.replace('/', ''))\r\n        history.listen((location) => {\r\n            setAchekerUrl(location.pathname.replace('/', ''));\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"footer-wrapper\" style={{ opacity, transform: `translate(0, ${translateY}px)` }}>\r\n            <div className=\"footer\" >\r\n                <p className=\"empty\"></p>\r\n                {console.log(achekerUrl)}\r\n                <p>Creat de <a href={`https://info.shaqodoon.ro/`} target='_blank' rel='noopener noreferrer' >shado doon</a> team.</p>\r\n                <a href=\"https://achecker.ca/checker/index.php?uri=referer&gid=WCAG2-AAA\">\r\n                    <img src=\"https://achecker.ca/images/icon_W2_aaa.jpg\" alt=\"WCAG 2.0 (Level AAA)\" height=\"32\" width=\"102\" />\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;",["117","118"],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Jobs.jsx",["119"],"import React, { useEffect, useState } from 'react';\r\nimport './Jobs.scss';\r\n\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getAllJobs, getJobsCompany } from '../redux/jobs/jobs.actions';\r\nimport { getAllCompanies } from '../redux/companies/companies.actions';\r\nimport { setIsLoading } from '../redux/helpers/helpers.actions';\r\n\r\nimport loading from '../assets/gif/loading 2.gif';\r\n\r\nimport Job from '../components/Job';\r\n\r\nconst AllJobs = (\r\n    {\r\n        jobs, getAllJobs,\r\n        companies, getAllCompanies,\r\n        getJobsCompany, jobsCompany,\r\n        isLoading, setIsLoading\r\n    }\r\n) => {\r\n\r\n    // const [loading, setLoading] = useState(true); //  this was replaced with redux\r\n    const [isCompaniesLoaded, setCompaniesLoaded] = useState(false);\r\n\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        // why do I need companies loaded? asnwer: to check if the company exist if user goes direct to jobs/company-name\r\n        if (!companies) {\r\n            getAllCompanies(() => { setCompaniesLoaded(true) });\r\n        } else {\r\n            // if companies are already loaded set it to true\r\n            setCompaniesLoaded(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // check if the companies are loaded, if not, wait\r\n        if (isCompaniesLoaded) {\r\n            if (params.company) {\r\n                let companySelected;\r\n                // get the api from all jobs from this company\r\n                companies ?\r\n                    companySelected = companies.filter(\r\n                        // check if there is any company based on the company name from url\r\n                        company => company.company === params.company ||\r\n                            // check if there is any company based on the company name from url after replacing '-' with ' '\r\n                            company.company === params.company.replace(/-/g, ' ')\r\n                    ) : console.log('empty')\r\n                companySelected.length ?\r\n                    // if comapny exist show jobs\r\n                    getJobsCompany({ api: companySelected[0].link, cb: () => { setIsLoading(false) } })\r\n                    // if company do not exist redirect to companies page\r\n                    : history.push('/companii')\r\n            } else {\r\n                if (jobs) {\r\n                    setIsLoading(false)\r\n                } else {\r\n                    getAllJobs(() => { setIsLoading(false) });\r\n                }\r\n            }\r\n        }\r\n        // because I make it to render when 'isLoading' changes it render extra 1 time after setIsLoading(false)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isCompaniesLoaded, isLoading])\r\n\r\n    const renderJobs = (theJobs) => {\r\n        if (theJobs === null) {\r\n            setCompaniesLoaded(false);\r\n\r\n        }\r\n\r\n        return theJobs.map(({ company, title, city, country, link }) => {\r\n            return (<Job\r\n                key={`${link} ${Math.random()}`}\r\n                company={company}\r\n                title={title}\r\n                city={city}\r\n                country={country}\r\n                link={link}\r\n            />)\r\n        }\r\n        )\r\n    }\r\n\r\n    if (isLoading) {\r\n        // console.log('loading')\r\n        return (\r\n            <div className=\"loading\">\r\n                <img src={loading} alt=\"shaqo doon loading\" />\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"jobs\">\r\n                <a href=\"#top\" id='top-jobs'></a>\r\n                {params.company ?\r\n                    renderJobs(jobsCompany)\r\n                    :\r\n                    renderJobs(jobs)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = ({ jobs, companies, helpers }) => ({\r\n    jobs: jobs.all,\r\n    jobsCompany: jobs.jobsCompany,\r\n    companies: companies.all,\r\n    isLoading: helpers.isLoading\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getAllJobs: (jobsLoaded) => dispatch(getAllJobs(jobsLoaded)),\r\n    getJobsCompany: (data) => dispatch(getJobsCompany(data)),\r\n    getAllCompanies: (cb) => dispatch(getAllCompanies(cb)),\r\n    setIsLoading: (bool) => dispatch(setIsLoading(bool)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllJobs);\r\n","D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\jobs\\jobs.reducer.js",[],["120","121"],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\companies\\companies.reducer.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\helpers\\helpers.reducer.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\total\\total.reducer.js",[],["122","123"],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\total\\total.actions.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\companies\\companies.actions.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\helpers\\checkScroll.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\jobs\\jobs.actions.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Menu.jsx",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\jobs\\jobs.types.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\total\\total.types.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\axios\\baseUrl.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\pages\\Error404.jsx",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\helpers\\helpers.actions.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\reportWebVitals.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Company.jsx",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\redux\\companies\\companies.types.js",[],"D:\\GitHub\\sergiuavram\\shaqo_doon_frontend\\src\\components\\Job.jsx",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":12},{"ruleId":"132","severity":1,"message":"133","line":32,"column":8,"nodeType":"134","endLine":32,"endColumn":10,"suggestions":"135"},{"ruleId":"124","replacedBy":"136"},{"ruleId":"126","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":99,"column":17,"nodeType":"140","endLine":99,"endColumn":46},{"ruleId":"124","replacedBy":"141"},{"ruleId":"126","replacedBy":"142"},{"ruleId":"124","replacedBy":"143"},{"ruleId":"126","replacedBy":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'info' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["147"],["145"],["146"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["145"],["146"],["145"],["146"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [history]",{"range":"150","text":"151"},[915,917],"[history]"]